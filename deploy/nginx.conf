worker_processes  1;
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

	gzip on; #开启gzip
    gzip_min_length 10k; #设置允许压缩的页面最小字节数; 这里表示如果文件小于10个字节，就不用压缩，因为没有意义，本来就很小
    gzip_buffers 4 16k; #设置压缩缓冲区大小，此处设置为4个16K内存作为压缩结果流缓存
    gzip_comp_level 3; #压缩级别，1-10，数字越大压缩的越好，也越占用CPU
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript; #制定压缩的类型,线上配置时尽可能配置多的压缩类型!
    gzip_vary on; #选择支持vary header；改选项可以让前端的缓存服务器缓存经过gzip压缩的页面; 这个可以不写，表示在传送数据时，给客户端说明我使用了gzip压缩
    gzip_disable "MSIE [1-6]\."; #配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）
		
    server {
        listen       80;
        server_name  localhost;
		location / {
			proxy_pass http://localhost:9527;
		}
		
		location /rest/ {
			rewrite /rest/(.*)$ /$1 break;
			proxy_pass http://localhost:8080;
		}
		
		location /rest/user/ {
			rewrite /rest/user/(.*)$ /$1 break;
			proxy_pass http://localhost:3000;
		}
    }
}
